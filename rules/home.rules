// Imports
import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

// Global Variables
var String telegrambot = "SwedesiBot"
var int onDuration = 5
var int minLux = 400
var Timer _timerBedroom = null
var Timer _timerBathroom = null
var Timer _timerLivingroom = null

//LUX values definition	
//https://msdn.microsoft.com/en-us/library/windows/desktop/dd319008(v=vs.85).aspx

rule "Bedroom Lamp Controller"
when
    Item iMotionBedroom changed
then
	//RULE: Switch on lamp temporarily if it is dark and motion is detected
	if(iMotionBedroom.state == ON && iLampBedroom.state == OFF && iLuxBedroom.state < minLux) {
		sendCommand(iLampBedroom, ON)
  	}
  	else if(iMotionBedroom.state == OFF && iLampBedroom.state == ON) {

		if(_timerBedroom != null) {
	    	_timerBedroom.cancel()
	    	_timerBedroom = null
	    }
	    	
		_timerBedroom = createTimer(now.plusSeconds(onDuration)) [|
		sendCommand(iLampBedroom, OFF)
	  	]
  	}  	 
end

rule "Bathroom Lamp Controller"
when
    Item iMotionBathroom changed
then
	//RULE: Switch on lamp temporarily if it is dark and motion is detected
	if(iMotionBathroom.state == ON && iLampBathroom.state == OFF && iLuxBathroom.state < minLux) {
		sendCommand(iLampBathroom, ON)
  	}
  	else if(iMotionBathroom.state == OFF && iLampBathroom.state == ON) {

		if(_timerBathroom != null) {
	    	_timerBathroom.cancel()
	    	_timerBathroom = null
	    }
	    	
		_timerBathroom = createTimer(now.plusSeconds(onDuration)) [|
		sendCommand(iLampBathroom, OFF)
	  	]
  	}  	 
end

rule "Livingroom Lamp Controller"
when
    Item iMotionLivingroom changed
then
	//RULE: Switch on lamp temporarily if it is dark and motion is detected
	if(iMotionLivingroom.state == ON && iLampLivingroom.state == OFF && iLuxLivingroom.state < minLux) {
		sendCommand(iLampLivingroom, ON)
  	}
  	else if(iMotionLivingroom.state == OFF && iLampLivingroom.state == ON) {

		if(_timerLivingroom != null) {
	    	_timerLivingroom.cancel()
	    	_timerLivingroom = null
	    }
	    	
		_timerLivingroom = createTimer(now.plusSeconds(onDuration)) [|
		sendCommand(iLampLivingroom, OFF)
	  	]
  	}  	 
end

rule "Motion Detected"
when
	Item iMotionBedroom changed
	or
	Item iMotionBathroom changed
	or 
	Item iMotionLivingroom changed
then
	//RULE: Alert when Motion is detected and there is no one at home
	if(((iMotionBedroom.state == ON) || (iMotionBathroom.state == ON) || (iMotionLivingroom.state == ON)) && ( (iPresenceSumit.state == OFF) && (iPresenceParul.state == OFF) ) ) {
		
		var String msg = "";
		
		switch(true)
		{
			case iMotionBedroom.state == ON:  msg = "Bedroom"
			case iMotionBathroom.state == ON:  msg = "Bathroom"
			case iMotionLivingroom.state == ON:  msg = "Livingroom"	
		}
		
		sendTelegram(telegrambot, msg + " - Motion Detected")
		//sendTelegramPhoto(telegrambot, "https://unsplash.it/300/200/?random", null)
		//http://192.168.254.3/cgi-bin/video_snapshot.cgi?user=admin&pwd=p%40ssw0rd
		sendTelegramPhoto(telegrambot, "https://www.smashingmagazine.com/wp-content/uploads/2015/06/10-dithering-opt.jpg", null)	
	}
end	