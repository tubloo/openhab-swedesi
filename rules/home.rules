// Imports
import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

// Global Variables
var String telegrambot = "SwedesiBot"
var int onDuration = 5
var Timer _timerBedroom = null
var Timer _timerBathroom = null
var Timer _timerLivingroom = null

//LUX values definition	
//https://msdn.microsoft.com/en-us/library/windows/desktop/dd319008(v=vs.85).aspx

rule "Bedroom Lamp Controller"
when
    Item iMotionBedroom changed
then
	//RULE: Switch on lamp temporarily if it is dark and motion is detected
	if(iMotionBedroom.state == ON) {
	
		//sendCommand(iMotionBedroom, OFF)  
		
		if(iLuxBedroom.state < 400) {
			if(iLampBedroom.state == OFF) {
				sendCommand(iLampBedroom, ON)
			}
	    
/*	    	if(_timerBedroom != null) {
	    		_timerBedroom.cancel()
	    		_timerBedroom = null
	    	}
	    	
			_timerBedroom = createTimer(now.plusSeconds(onDuration)) [|
			sendCommand(iLampBedroom, OFF)
	  		]
*/
	  	}
  	}
  	else if(iMotionBedroom.state == OFF) {
  		if(iLampBedroom.state == ON) {
				sendCommand(iLampBedroom, OFF)
			}
  	} 
end

rule "Bathroom Lamp Controller"
when
    Item iMotionBathroom changed
then
	//RULE: Switch on lamp temporarily if it is dark and motion is detected
	if(iMotionBathroom.state == ON) {
	
		sendCommand(iMotionBathroom, OFF)  
		
		if(iLuxBathroom.state < 400) {
			if(iLampBathroom.state == OFF) {
				sendCommand(iLampBathroom, ON)
			}
	    
	    	if(_timerBathroom != null) {
	    		_timerBathroom.cancel()
	    		_timerBathroom = null
	    	}
	    	
			_timerBathroom = createTimer(now.plusSeconds(onDuration)) [|
			sendCommand(iLampBathroom, OFF)
	  		]
	  	}
  	}
end

rule "Livingroom Lamp Controller"
when
    Item iMotionLivingroom changed
then
	//RULE: Switch on lamp temporarily if it is dark and motion is detected
	if(iMotionLivingroom.state == ON) {
	
		sendCommand(iMotionLivingroom, OFF)  
		
		if(iLuxLivingroom.state < 400) {
			if(iLampLivingroom.state == OFF) {
				sendCommand(iLampLivingroom, ON)
			}
	    
	    	if(_timerLivingroom != null) {
	    		_timerLivingroom.cancel()
	    		_timerLivingroom = null
	    	}
	    	
			_timerLivingroom = createTimer(now.plusSeconds(onDuration)) [|
			sendCommand(iLampLivingroom, OFF)
	  		]
	  	}
  	}
end

rule "Motion Detected"
when
	Item iMotionBedroom changed
	or
	Item iMotionBathroom changed
	or 
	Item iMotionLivingroom changed
then
	//RULE: Alert when Motion is detected and there is no one at home
	if(((iMotionBedroom.state == ON) || (iMotionBathroom.state == ON) || (iMotionLivingroom.state == ON)) && ( (iPresenceSumit.state == OFF) && (iPresenceParul.state == OFF) ) {
		sendTelegram(telegrambot, "Motion Detected")
		//sendTelegramPhoto(telegrambot, "https://unsplash.it/300/200/?random", null)
		sendTelegramPhoto(telegrambot, "https://www.smashingmagazine.com/wp-content/uploads/2015/06/10-dithering-opt.jpg", null)	
	}
end	